/**
 * postal.request-response - postal.js add-on that provides a request/response pattern API.
 * Author: Jim Cowart (http://freshbrewedcode.com/jimcowart)
 * Version: v0.1.0
 * Url: http://github.com/postaljs/postal.request-response.js
 * License(s): MIT
 */
(function(e,r){"object"==typeof module&&module.exports?module.exports=function(e){return r(require("underscore"),e,this)}:"function"==typeof define&&define.amd?define(["underscore","postal"],function(o,t){return r(o,t,e)}):e.postal=r(e._,e.postal,e)})(this,function(e,r){var o="postal.request-response";r.configuration.promise={createDeferred:function(){throw new Error("You need to provide an implementation for postal.configuration.promise.createDeferred that returns a deferred/promise instance.")},getPromise:function(){throw new Error("You need to provide an implementation for postal.configuration.promise.getPromise that returns a promise safe for consuming APIs to use.")},fulfill:"resolve",fail:"reject"};var t=function(){for(var e={},r=[],o=0;256>o;o++)r[o]=(16>o?"0":"")+o.toString(16);return e.create=function(){var e=4294967295*Math.random()|0,o=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0;return r[255&e]+r[e>>8&255]+r[e>>16&255]+r[e>>24&255]+"-"+r[255&o]+r[o>>8&255]+"-"+r[o>>16&15|64]+r[o>>24&255]+"-"+r[63&t|128]+r[t>>8&255]+"-"+r[t>>16&255]+r[t>>24&255]+r[255&n]+r[n>>8&255]+r[n>>16&255]+r[n>>24&255]},e}();r.ChannelDefinition.prototype.request=function(e){var n,i=e.envelope?e.envelope:{topic:e.topic,data:e.data},a=t.create(),s=e.replyTopic||a,u=e.replyChannel||o,l=r.configuration.promise.createDeferred();i.headers=i.headers||{},i.headers.replyable=!0,i.headers.requestId=a,i.headers.replyTopic=s,i.headers.replyChannel=u;r.subscribe({channel:u,topic:s,callback:function(e){l[r.configuration.promise.fulfill](e)}}).once();return e.timeout&&(n=setTimeout(function(){l[r.configuration.promise.fail](new Error("Timeout limit exceeded for request."))},e.timeout)),this.publish(i),r.configuration.promise.getPromise(l)};var n=r.publish;return r.publish=function(e){e.headers&&e.headers.replyable&&(e.reply=function(o){r.publish({channel:e.headers.replyChannel,topic:e.headers.replyTopic,headers:{isReply:!0,requestId:e.headers.requestId},data:o})}),n.call(this,e)},r});